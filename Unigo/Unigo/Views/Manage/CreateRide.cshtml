@model Unigo.Models.CreateRideViewModel
@{
    ViewBag.Title = "Create Ride";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<section id="header">
    <header class="container-fluid pt-5 bg-unigo">
        <div class="container">
            <div class="row text-md-left text-center">
                <div class="col ml-auto">
                    <h1 class="text-white">Create a Ride</h1>
                </div>
            </div>
        </div>
    </header>
</section>
<section id="createRide">
    <div class="container-fluid">
        <div class="container">
            <div class="row py-3 py-sm-5 justify-content-around">
                @*Google map*@
                <div id="map" class="col-12 col-md-8" style="{}:hover {cursor: pointer}"></div>
                <div class="col-12 col-md-4">
                    <p class="text-info" style="margin-bottom: -5px;">@ViewBag.StatusMessage</p>
                    @using (Html.BeginForm("CreateRide", "Manage", FormMethod.Post, new { id = "formCreateRide", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary("", new { @class = "text-warning" })
                        <div class="form-group">
                            <label for="startPoint">From?</label>
                            <p class="text-warning" style="display:none;" id="inputFrom">Could not find place on map</p>
                            @Html.TextBoxFor(m => m.StartPoint, new { @class = "form-control", placeholder = "Clik on map", id = "inputField" })
                        </div>
                        <div class="form-group">
                            <label for="endPoint">To?</label>
                            @Html.DropDownListFor(m => m.DestinationId,
                            new SelectList(Model.Destinations,
                                           "Id",
                                           "Name"), new { @class = "form-control", id = "endPoint" })
                        </div>
                        <div class="form-group">
                            <label for="datetimepicker4">When?</label>
                            <div class="input-group date" id="datetimepicker4" data-target-input="nearest">
                                <input id="datetimepicker4" class="form-control datetimepicker-input" data-target="#datetimepicker4" type="datetime" name="datetimefield" />
                                <div class="input-group-append" data-target="#datetimepicker4" data-toggle="datetimepicker">
                                    <div class="input-group-text">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                </div>
                            </div>
                        </div>


                        @*
                Future developement-----

                <div class="form-group">
                <div class="d-inline-flex align-items-center">
                    <a class="btn btn-primary text-white" role="button" id="addStopPoint" onclick="addStopPoint()">Add</a>
                    <p class="m-0 ml-1" for="stopPoints">stop points?</p>
                </div>
                <div id="location">
                </div>
            </div>*@


                        <div class="form-group">
                            <label for="numberOfSeats">Free seats?</label>
                            @Html.TextBoxFor(m => m.NumberOfSeats, new { @class = "form-control", placeholder = "NO free seats" })
                        </div>
                        @Html.TextBoxFor(m => m.StartLat, new { @class = "form-control", id = "fieldLat" , style = "display:none;"})
                        @Html.TextBoxFor(m => m.StartLong, new { @class = "form-control", id = "fieldLng" , style = "display:none;"})
                        <div class="text-center pt-3">
                            <button class="btn btn-large btn-primary text-white" type="submit">Create a Ride</button>
                        </div>
                        <script type="text/javascript">
                            $(function () {
                                $('#datetimepicker4').datetimepicker({
                                    format: 'MM/DD/YYYY HH:mm',
                                    minDate: moment().utc(),
                                    stepping: 5,
                                    sideBySide: true,
                                    widgetPositioning: {
                                        horizontal: 'right',
                                        vertical: 'bottom'
                                    }
                                });
                            });

                        </script>
                    }
                </div>
            </div>
        </div>
    </div>
</section>
<script  type="text/javascript">
    
    $(document).ready(function () {

         var marker = new google.maps.Marker({map: map});

        google.maps.event.addListener(map, 'click', function(event) {
           placeMarker(event.latLng);
        });

        function placeMarker(location) {
            marker.setPosition(location);
            var lat = marker.getPosition().lat();
            var lng = marker.getPosition().lng();

            $("#fieldLat").val(lat);
            $("#fieldLng").val(lng);

            $.getJSON("https://maps.googleapis.com/maps/api/geocode/json?latlng=" + lat + "," + lng + "&sensor=true&key=AIzaSyBs3lGeDQjJj8VQ_c0KjZkQnlADlOXR0jU&language=en", function (data) {
                $("#inputField").val(data.results[0].formatted_address);
            });
            
        }

        


        geocoder = new google.maps.Geocoder();
        var endMarker = new google.maps.Marker({ map: map });

        function codeAddress(address, marker) {
            var returnVal;

            geocoder.geocode({ 'address': address, 'componentRestrictions': { 'country': 'DK' } }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    $("#inputFrom").hide();

                    marker.setPosition(results[0].geometry.location);
                   
                } else {
                    $("#inputFrom").show();
                    return null;
                }
            });

            return marker.getPosition();
        }

        $("#endPoint").on('click', function () {

            var to = codeAddress($("#endPoint").find('option:selected').text(), endMarker);

            // To Get distance between points
           // google.maps.geometry.spherical.computeDistanceBetween (from, to)

       

        });



    });

</script>
